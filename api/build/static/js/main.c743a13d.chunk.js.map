{"version":3,"sources":["www/serviceWorker.js","www/helpers.js","www/pages/sheets/snippets/StatusTag.jsx","www/pages/sheets/ListInvoicesSheet.jsx","www/pages/sheets/Dashboard.jsx","www/pages/sheets/ViewInvoiceSheet.jsx","www/pages/sheets/SheetRoutes.jsx","www/pages/auth/Login.jsx","www/pages/auth/AuthRoutes.jsx","www/index.js"],"names":["Boolean","window","location","hostname","match","API_URL","concat","process","PORT","apiCall","route","data","callback","token","loadingCallbackState","axios","post","headers","Authorization","then","catch","error","reportError","axios_response","console","log","notif","message","response","notification","description","raw","Array","isArray","forEach","element","getDateObject","seconds","t","Date","setSeconds","getStatusColor","status","color","StatusTag","_ref","faint","react_default","a","createElement","tag","style","opacity","toUpperCase","hdate","require","changeStatus","new_status","invoice_id","auth_token","fetchInvoices","changeLabel","actionsMenu","menu","items","key","label","react_router_dom","to","es_button","type","icon","LayoutOutlined","block","children","onClick","danger","RollbackOutlined","e","onChange","pagination","filters","sorter","extra","ListInvoicesSheet","authHeader","useAuthHeader","_useState","useState","_useState2","Object","slicedToArray","invoices","setInvoices","_useState3","_useState4","loading","setLoading","r","row","index","created_verbose","prettyPrint","created","showTime","columns","title","dataIndex","align","render","amount","invoice","getSymbolFromCurrency","currency","Math","round","amount_due","printAmount","metadata_marked_status","metadata","marked_status","snippets_StatusTag","text","value","onFilter","record","hasOwnProperty","custom_status","dropdown","arrow","overlay","placement","space","DownOutlined","useEffect","className","table","dataSource","commaNumber","Dashboard","carousel_ref","useRef","yesterday","setYesterday","yesterday_statistic","setYesterday_statistic","_useState5","_useState6","yesterday_type_amount","setYesterday_type_amount","_useState7","_useState8","lastWeek","setLastWeek","_useState9","_useState10","lastWeek_statistic","setLastWeek_statistic","_useState11","_useState12","lastWeek_type_amount","setLastWeek_type_amount","_useState13","_useState14","lastMonth","setLastMonth","_useState15","_useState16","lastMonth_statistic","setLastMonth_statistic","_useState17","_useState18","lastMonth_type_amount","setLastMonth_type_amount","_useState19","_useState20","lastYear","setLastYear","_useState21","_useState22","lastYear_statistic","setLastYear_statistic","_useState23","_useState24","lastYear_type_amount","setLastYear_type_amount","getYesterdayStatsData","getLastWeekStatsData","getLastMonthStatsData","getLastYearStatsData","moment","subtract","start","startOf","unix","end","endOf","count","el","date","setHours","_id","hour","total_amount","format","amount_avg","length","count_avg","fetchYesteday","last_week","year","month","day","fetchLastWeek","last_month","fetchLastMonth","last_year","setTimeout","fetchLastYear","annotationLineStyles","stroke","lineDash","lineWidth","gradientFill","fill","yesterday_config_1","xField","yField","annotations","position","content","offsetY","textBaseline","meta","alias","formatter","substring","xAxis","tickCount","smooth","areaStyle","yesterday_config_2","lastWeek_config_1","lastWeek_config_2","lastMonth_config_1","lastMonth_config_2","lastYear_config_1","lastYear_config_2","minHeight","es_row","col","span","onMouseOver","current","goTo","gutter","justify","statistic","prefix","DollarOutlined","PlusCircleFilled","carousel","ref","dotPosition","autoplay","autoplaySpeed","segmented","options","val","Fragment","components_area","assign","stringToColour","str","hash","i","charCodeAt","colour","toString","substr","hex","result","exec","parseInt","g","b","hexToRgb","cols","o","price","s","replace","txt","charAt","toLowerCase","replaceAll","ViewInvoiceSheet","useParams","setInvoice","setItems","bg","light","dark","bgGradient","background","borderRadius","lines","id","customer_name","split","number","relativeTime","due_date","marginTop","display","justifyContent","marginRight","size","backgroundColor","account_name","customer_email","customer_address","customer_phone","divider","SheetRoutes","react_router","path","pages_sheets_Dashboard","sheets_ListInvoicesSheet","pages_sheets_ViewInvoiceSheet","Login","login_email","setLogin_email","login_password","setLogin_password","register_email","setRegister_email","register_password","setRegister_password","register_password_confirm","setRegister_password_confirm","login_errors","setLogin_errors","register_errors","setRegister_errors","signIn","useSignIn","navigate","useNavigate","index_module","paused","height","amplitude","speed","points","bottom","top","zIndex","tabs","tabPosition","TabPane","tab","direction","textDecoration","input","target","placeholder","UserOutlined","LockOutlined","href","map","es_alert","ExclamationCircleOutlined","showIcon","fontSize","errors","push","email","password","expiresIn","tokenType","authState","user","tryLogin","LoginOutlined","tryRegister","UserAddOutlined","AuthRoutes","pages_auth_Login","ReactDOM","index_modern","authType","authName","cookieDomain","cookieSecure","protocol","loginPath","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c743a13d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { notification } from 'antd';\nimport getSymbolFromCurrency from 'currency-symbol-map';\nimport { useAuthHeader } from 'react-auth-kit';\nimport axios from 'axios';\n\nexport const API_URL = `http://localhost:${process.env.PORT || 3000}`;\n\nexport const apiCall = (route, data, callback, token, loadingCallbackState) => {\n\n    axios.post(API_URL + route, data, (token ? { headers : { Authorization : token } } : {})).then(callback).catch(error => {reportError(error); if(loadingCallbackState) loadingCallbackState(false)});\n}\n\nexport const reportError = (axios_response) => {\n    console.log(axios_response);\n\n    const notif = {\n        message : \"There was an error.\",\n    };\n    if(!axios_response.response){\n\n        if(axios_response.data){\n\n        }\n        notification['error']({\n            message : \"There was an error.\",\n            description : (axios_response.message ? axios_response.message : axios_response)\n        })\n\n        return;\n    }\n    const response = axios_response.response;\n\n    if(response.data){\n        console.log( typeof response.data.error);\n        if(response.data.raw && response.data.raw.message) notif.description = response.data.raw.message;\n        else if(response.data.error && response.data.error.message) notif.description = response.data.error.message;\n        \n        else if(typeof response.data.error === \"string\") notif.description = response.data.error;\n        else if(Array.isArray(response.data.error)){\n            response.data.error.forEach(element => {\n                notif.description += element + '.'\n            });\n        }\n        else if(response.message) notif.description = response.message;\n    }\n    notification['error'](notif);\n}\n\nexport const getDateObject = (seconds) => {\n    var t = new Date(1970, 0, 1); // Epoch\n    t.setSeconds(seconds);\n    return t;\n}\n\nexport const getStatusColor = (status) => {\n    let color = false;\n    switch (status) {\n        case 'paid':\n            color = 'green';\n            break;\n    \n        case 'invoiced_in_error':\n            color = 'volcano';\n            break;\n    \n        case 'waiver':\n            color = 'geekblue';\n            break;\n    \n        case 'voucher':\n            color = 'geekblue';\n            break;\n    \n        case 'refund':\n            color = 'orange';\n            break;\n    \n        case 'uncollectible':\n            color = 'magenta';\n            break;\n    \n        case 'open':\n            color = 'cyan';\n            break;\n    \n        default:\n            break;\n    }\n    \n    return color;\n}\n\nexport const printAmount = (invoice) => {\n    return `${getSymbolFromCurrency(invoice.currency)}${Math.round(invoice.amount_due/100)}`;\n}\n","import { Tag } from 'antd';\nimport React, { Component } from 'react'\nimport { getStatusColor } from '../../../helpers';\n\n\nconst StatusTag = ({status,faint}) => {\n\n    return (\n        <Tag style={{opacity : (faint ? '0.4' : '1')}} color={getStatusColor((status))}>{status ? status.toUpperCase() : \"None\"}</Tag>\n    )\n}\n\nexport default StatusTag;","import React, { useState, useEffect } from 'react'\nimport { Button, Dropdown, Menu, Space, Table, Tag } from \"antd\"\nimport { DownOutlined, LayoutOutlined, RightCircleOutlined, RollbackOutlined, SmileOutlined } from '@ant-design/icons';\nimport { apiCall, getDateObject, getStatusColor, printAmount, reportError } from '../../helpers';\nimport { NavLink } from 'react-router-dom';\nimport StatusTag from './snippets/StatusTag';\nimport { useAuthHeader } from 'react-auth-kit';\n\nconst hdate = require(\"human-date\");\n\nconst changeStatus = (new_status, invoice_id, auth_token, fetchInvoices) => {\n\n    apiCall(`/invoices/update/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            reportError(response);\n        }\n    }, auth_token);\n}\n\nconst changeLabel = (new_status, invoice_id, auth_token, fetchInvoices) => {\n\n    apiCall(`/invoices/update/label/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            reportError(response);\n        }\n    }, auth_token);\n}\n\nconst actionsMenu = (invoice_id, auth_token, fetchInvoices) => {\n    \n    \n    return (\n\n        <Menu \n            items={[\n                {\n                    key : 1,\n                    label : (\n                        <NavLink to={\"/sheet/invoice/view/\" + invoice_id}>\n                            <Button type='dashed' icon={<LayoutOutlined/>} block >View Invoice</Button>\n                        </NavLink>\n                    ),\n\n                },\n                {\n                    key : 2,\n                    label : 'Mark Invoice',\n                    children : [\n                        {\n                            key : '2.1',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"paid\", invoice_id, auth_token, fetchInvoices)}>Paid</Button>\n                            )\n                        },\n                        {\n                            key : '2.2',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"invoiced_in_error\", invoice_id, auth_token, fetchInvoices)}>Invoiced in error</Button>\n                            )\n                        },\n                        {\n                            key : '2.3',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"waiver\", invoice_id, auth_token, fetchInvoices)}>Waiver</Button>\n                            )\n                        },\n                        {\n                            key : '2.4',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"voucher\", invoice_id, auth_token, fetchInvoices)}>Voucher</Button>\n                            )\n                        },\n                        {\n                            key : '2.5',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"refund\", invoice_id, auth_token, fetchInvoices)}>Refund</Button>\n                            )\n                        },\n                        {\n                            key : '2.6',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"uncollectible\", invoice_id, auth_token, fetchInvoices)}>Uncollectible</Button>\n                            )\n                        },\n                    ]\n                },\n                {\n                    key : 3,\n                    label : 'Change Status',\n                    children : [\n                        {\n                            key : '3.1',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"paid\", invoice_id, auth_token, fetchInvoices)}>Paid</Button>\n                            )\n                        },\n                        {\n                            key : '3.2',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"invoiced_in_error\", invoice_id, auth_token, fetchInvoices)}>Invoiced in error</Button>\n                            )\n                        },\n                        {\n                            key : '3.3',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"waiver\", invoice_id, auth_token, fetchInvoices)}>Waiver</Button>\n                            )\n                        },\n                        {\n                            key : '3.4',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"voucher\", invoice_id, auth_token, fetchInvoices)}>Voucher</Button>\n                            )\n                        },\n                        {\n                            key : '3.5',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"refund\", invoice_id, auth_token, fetchInvoices)}>Refund</Button>\n                            )\n                        },\n                        {\n                            key : '3.6',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"uncollectible\", invoice_id, auth_token, fetchInvoices)}>Uncollectible</Button>\n                            )\n                        },\n                    ]\n                },\n                {\n                    key : 4,\n                    label : (\n                            <Button type='primary' danger icon={<RollbackOutlined/>} block onClick={() => changeStatus(\"uncollectible\", invoice_id, auth_token, fetchInvoices)} >Refund</Button>\n                    )\n                },\n            ]}\n\n            onClick={(e) => console.log(e)}\n        />\n    )\n}\n\n\n\n\nconst onChange = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  };\n\n\nconst ListInvoicesSheet =  () => {\n\n    const authHeader = useAuthHeader();\n    const [invoices, setInvoices] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const fetchInvoices = () => {\n        setLoading(true);\n        apiCall(\"/invoices/list\", {}, (r) => {\n    \n            let invoices = r.data.data.data;\n            // console.log(Array.isArray(invoices))\n            invoices.forEach((row, index) => {\n                row.created_verbose = hdate.prettyPrint(getDateObject(row.created), { showTime : true });\n                row.key = index;\n            })\n            setLoading(false);\n            setInvoices(invoices);\n        }, authHeader(), setLoading)\n        \n    }\n\n    const columns = [\n        // Offering\n        {\n            title : \"Offering\",\n            dataIndex : \"account_name\",\n            key : \"account_name\"\n        },\n        // Email\n        {\n            title : \"Email\",\n            dataIndex : \"customer_email\",\n            key : \"customer_email\"\n        },\n        // Amount\n        {\n            title : \"Amount\",\n            dataIndex : \"amount_due\",\n            key : \"amount_due\",\n            align : \"center\",\n            render : (amount, invoice) => {\n                return ( \n                    <span>{printAmount(invoice)}</span>\n                )\n            }\n        },\n        // Marked for Status\n        {\n            title : \"Marked for\",\n            dataIndex : \"metadata.marked_status\",\n            key : \"marked_status\",\n            align : \"center\",\n            render : (metadata_marked_status, invoice) => {\n                \n                if(invoice.metadata.marked_status){\n                    return <StatusTag faint status={invoice.metadata.marked_status}/>\n                }\n            },\n            filters : [\n                {\n                    text : 'Draft',\n                    value : 'draft'\n                },\n                {\n                    text : 'Invoiced in error',\n                    value : 'invoiced_in_error'\n                },\n                {\n                    text : 'Waiver',\n                    value : 'waiver'\n                },\n                {\n                    text : 'Voucher',\n                    value : 'voucher'\n                },\n                {\n                    text : 'Refund',\n                    value : 'refund'\n                },\n                {\n                    text : 'Uncollectible',\n                    value : 'uncollectible'\n                },\n                {\n                    text : \"Open\",\n                    value : \"open\"\n                },\n                {\n                    text : \"Paid\",\n                    value : \"paid\"\n                }\n            ],\n            onFilter: (value, record) => record.status === value,\n        },\n        // Current Status\n        {\n            title : \"Current status\",\n            dataIndex : \"status\",\n            key : \"status\",\n            align : \"center\",\n            render : (status, invoice) => <StatusTag status={invoice.metadata.hasOwnProperty(\"custom_status\") ? invoice.metadata.custom_status : status}/>,\n            filters : [\n                {\n                    text : 'Draft',\n                    value : 'draft'\n                },\n                {\n                    text : 'Invoiced in error',\n                    value : 'invoiced_in_error'\n                },\n                {\n                    text : 'Waiver',\n                    value : 'waiver'\n                },\n                {\n                    text : 'Voucher',\n                    value : 'voucher'\n                },\n                {\n                    text : 'Refund',\n                    value : 'refund'\n                },\n                {\n                    text : 'Uncollectible',\n                    value : 'uncollectible'\n                },\n                {\n                    text : \"Open\",\n                    value : \"open\"\n                },\n                {\n                    text : \"Paid\",\n                    value : \"paid\"\n                }\n            ],\n            onFilter: (value, record) => record.status === value,\n        },\n        {\n            title : \"Created\",\n            dataIndex : \"created_verbose\",\n            key : \"created_verbose\"\n        },\n        {\n            title : \"Action\",\n            dataIndex : \"id\",\n            key : \"action\",\n            render : (invoice_id) => {\n                return (\n                    <Dropdown\n                    arrow={false}\n                    overlay={actionsMenu(invoice_id, authHeader(), fetchInvoices)}\n                    placement=\"bottomRight\"\n                >\n                    <Button >\n                        <Space>\n                        Actions\n                        <DownOutlined/>\n                        </Space>\n                    </Button>\n                </Dropdown>\n                )\n            }\n        }\n    ]\n\n    \n\n    useEffect(() => {\n        \n        fetchInvoices();\n      \n    }, [])\n    \n    return (\n        <div className='sheet'>\n            <Space/>\n            <h1>Invoices </h1>\n            \n            <Table loading={loading} dataSource={invoices} columns={columns} onChange={onChange} />\n            \n        </div>\n    )\n}\n\nexport default ListInvoicesSheet","import { DollarOutlined, PlusCircleFilled } from '@ant-design/icons';\nimport { Carousel, Col, Row, Segmented, Statistic } from 'antd';\nimport { Area, Line } from \"@ant-design/charts\";\nimport { apiCall } from '../../helpers';\nimport \"./Dashboard.css\"\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useAuthHeader } from 'react-auth-kit';\nimport moment from 'moment';\n\nconst commaNumber = require('comma-number')\n\nconst dummyStateData = 36000;\nconst dummyStateDataSmall = 36;\n\nconst Dashboard = () => {\n\n    const carousel_ref = useRef();\n\n    const [yesterday, setYesterday] = useState([]);\n    const [yesterday_statistic, setYesterday_statistic] = useState(false);\n    const [yesterday_type_amount, setYesterday_type_amount] = useState(true);\n\n    const [lastWeek, setLastWeek] = useState([]);\n    const [lastWeek_statistic, setLastWeek_statistic] = useState(false);\n    const [lastWeek_type_amount, setLastWeek_type_amount] = useState(true);\n\n    const [lastMonth, setLastMonth] = useState([]);\n    const [lastMonth_statistic, setLastMonth_statistic] = useState(false);\n    const [lastMonth_type_amount, setLastMonth_type_amount] = useState(true);\n\n    const [lastYear, setLastYear] = useState([]);\n    const [lastYear_statistic, setLastYear_statistic] = useState(false);\n    const [lastYear_type_amount, setLastYear_type_amount] = useState(true);\n\n    const authHeader = useAuthHeader();\n\n    const fetchYesteday = () => {\n\n        let yesterday = moment().subtract(1, \"day\");\n        let start = yesterday.startOf(\"day\").unix();\n        let end = yesterday.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/day\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n                \n                const date = new Date();\n                date.setHours(el._id.hour);\n\n                el.total_amount /= 100;\n\n                el.hour = moment(date).format(\"hh a\");\n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n            setYesterday_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"YESTERDAY AGGREGATE DATA\", data);\n            setYesterday(data);\n\n        }, authHeader());\n    }\n\n    const fetchLastWeek = () => {\n\n        let last_week = moment().subtract(1, \"week\");\n        let start = last_week.startOf(\"day\").unix();\n        let end = last_week.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/week\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\n                \n                el.total_amount /= 100;\n                \n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            console.log(data)\n\n            setLastWeek_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST WEEK AGGREGATE DATA\", data);\n\n            setLastWeek(data);\n\n        }, authHeader());\n    }\n\n    const fetchLastYear = () => {\n\n        let last_year = moment().subtract(1, \"month\");\n        let start = last_year.startOf(\"day\").unix();\n        let end = last_year.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/year\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}`;\n                \n                el.total_amount /= 100;\n\n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            \n\n            setLastYear_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST YEAR AGGREGATE DATA\", data);\n            setTimeout(() => {\n                console.log(lastYear_statistic)\n            }, 1000);\n\n            setLastYear(data);\n\n        }, authHeader());\n    }\n\n    const fetchLastMonth = () => {\n\n        let last_month = moment().subtract(1, \"month\");\n        let start = last_month.startOf(\"day\").unix();\n        let end = last_month.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/week\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\n                \n                el.total_amount /= 100;\n                \n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            console.log(data)\n\n            setLastMonth_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST MONTH AGGREGATE DATA\", data);\n\n            setLastMonth(data);\n\n        }, authHeader());\n    }\n\n    const getYesterdayStatsData = (key) => {\n        if(yesterday_statistic) return yesterday_statistic[key];\n        else return 0;\n    }\n\n    const getLastWeekStatsData = (key) => {\n        if(lastWeek_statistic) return lastWeek_statistic[key];\n        else return 0;\n    }\n\n    const getLastMonthStatsData = (key) => {\n        if(lastMonth_statistic) return lastMonth_statistic[key];\n        else return 0;\n    }\n\n    const getLastYearStatsData = (key) => {\n        if(lastYear_statistic) return lastYear_statistic[key];\n        else return 0;\n    }\n\n\n    useEffect(() => {\n        fetchYesteday();\n        fetchLastWeek();\n        fetchLastMonth();\n        fetchLastYear();\n    }, [])\n\n    const annotationLineStyles = {\n        stroke : \"rgb(80, 80, 80)\",\n        lineDash : [10, 5],\n        lineWidth : 2,\n        opacity : 0.75\n    };\n\n    const gradientFill = {\n        fill: 'l(270) 0:#af7bb4b2 1:#165481ad',\n    };\n\n    const yesterday_config_1 = {\n        xField: 'hour',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getYesterdayStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getYesterdayStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getYesterdayStatsData(\"amount_avg\")],\n                end : ['max', getYesterdayStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            hour : {\n                alias : \"Time\",\n                formatter : (hour) => {\n                    \n                    if(hour[0] == '0') return hour.substring(1);\n                    return hour;\n                },\n            },\n            total_amount : {\n                alias : \"Amount\",\n                formatter : (amount) => {\n                    return `$ ${commaNumber(amount)}`\n                }\n            }\n        },\n        xAxis : {\n            tickCount : 24,\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n    \n\n    const yesterday_config_2 = {\n        xField: 'hour',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getYesterdayStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getYesterdayStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getYesterdayStatsData(\"count_avg\")],\n                end : ['max', getYesterdayStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            hour : {\n                alias : \"Time\",\n                formatter : (hour) => {\n                    \n                    if(hour[0] == '0') return hour.substring(1);\n                    return hour;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        xAxis : {\n            tickCount : 24,\n        },\n        smooth : true\n    };\n\n    const lastWeek_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastWeekStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastWeekStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastWeekStatsData(\"amount_avg\")],\n                end : ['max', getLastWeekStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    // const mdate = moment(date, 'YYYY/M/D').format(\"MMMM d, YYYY (dddd)\");\n                    const mdate = moment(date, 'YYYY/M/D').format(\"dddd, Do MMMM\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastWeek_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastWeekStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastWeekStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastWeekStatsData(\"count_avg\")],\n                end : ['max', getLastWeekStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    // const mdate = moment(date, 'YYYY/M/D').format(\"MMMM d, YYYY (dddd)\");\n                    const mdate = moment(date, 'YYYY/M/D').format(\"dddd, DD MMMM\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastMonth_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastMonthStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastMonthStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastMonthStatsData(\"amount_avg\")],\n                end : ['max', getLastMonthStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    const mdate = moment(date, 'YYYY/M/D').format(\"Do MMM, YYYY (ddd)\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastMonth_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastMonthStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastMonthStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastMonthStatsData(\"count_avg\")],\n                end : ['max', getLastMonthStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    const mdate = moment(date, 'YYYY/M/D').format(\"MMMM d, YYYY (dddd)\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastYear_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastYearStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastYearStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastYearStatsData(\"amount_avg\")],\n                end : ['max', getLastYearStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    const mdate = moment(date, 'YYYY/M').format(\"Do MMM, YYYY (ddd)\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastYear_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastYearStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastYearStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastYearStatsData(\"count_avg\")],\n                end : ['max', getLastYearStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    const mdate = moment(date, 'YYYY/M').format(\"MMMM d, YYYY (dddd)\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n\n    return (\n        <div className=\" statistic-wrapper sheet\" style={{minHeight : \"90vh\"}}>\n\n            <Row>\n                <Col span={6}>\n                    <div className=\"statistic-card sheet\">\n                        <h3>Yesterday</h3>\n                        <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(0)}>\n                            <Row gutter={16} justify=\"space-between\">\n                                <Col>\n                                    <Statistic loading={!yesterday_statistic} title='Amount' prefix={<DollarOutlined/>} value={yesterday_statistic && commaNumber(yesterday_statistic.amount)} />\n                                </Col>\n                                <Col>\n                                    <Statistic loading={!yesterday_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={yesterday_statistic && commaNumber(yesterday_statistic.count)} />\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>\n                </Col>\n                <Col span={6}>\n                    <div className=\"statistic-card sheet\">\n                        <h3>Last Week</h3>\n                        <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(1)}>\n                            <Row gutter={16} justify=\"space-between\">\n                                <Col>\n                                    <Statistic loading={!lastWeek_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastWeek_statistic && commaNumber(lastWeek_statistic.amount)} />\n                                </Col>\n                                <Col>\n                                    <Statistic loading={!lastWeek_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastWeek_statistic && commaNumber(lastWeek_statistic.count)} />\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>\n                </Col>\n                <Col span={6}>\n                    <div className=\"statistic-card sheet\">\n                        <h3>Last Month</h3>\n                        <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(2)}>\n                            <Row gutter={16} justify=\"space-between\">\n                                <Col>\n                                    <Statistic loading={!lastMonth_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastMonth_statistic && commaNumber(lastMonth_statistic.amount)} />\n                                </Col>\n                                <Col>\n                                    <Statistic loading={!lastMonth_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastMonth_statistic && commaNumber(lastMonth_statistic.count)} />\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>\n                </Col>\n                <Col span={6}>\n                    <div className=\"statistic-card sheet\">\n                        <h3>Last Yar</h3>\n                        <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(3)}>\n                            <Row gutter={16} justify=\"space-between\">\n                                <Col>\n                                    <Statistic loading={!lastYear_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastYear_statistic && commaNumber(lastYear_statistic.amount)} />\n                                </Col>\n                                <Col>\n                                    <Statistic loading={!lastYear_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastYear_statistic && commaNumber(lastYear_statistic.count)} />\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n\n            \n\n            <div className=\"sheet\">\n                <Carousel ref={ref => carousel_ref.current = ref} dotPosition='top' autoplay autoplaySpeed={5000}>\n\n                {/* YESTERDAY'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Yesterday's Hourly Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setYesterday_type_amount(val === \"Amount\")} />\n                    </div>\n                    {yesterday_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Hour</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={yesterday} {...yesterday_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Hour</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={yesterday} {...yesterday_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n\n                {/* LAST WEEK'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Weeks's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastWeek_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastWeek_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastWeek} {...lastWeek_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastWeek} {...lastWeek_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n\n                {/* LAST MONTH'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Month's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastMonth_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastMonth_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastMonth} {...lastMonth_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastMonth} {...lastMonth_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n\n                {/* LAST YEAR'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Year's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastYear_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastYear_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastYear} {...lastYear_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastYear} {...lastYear_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n                    \n                </Carousel>\n            </div>\n            \n        </div>\n    )\n}\n\n\n\nexport default Dashboard;","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { apiCall, getDateObject } from '../../helpers';\nimport gradient from 'random-gradient';\nimport \"./ViewInvoiceSheet.css\"\nimport { Col, Divider, Tag, Row, Button, Table } from 'antd';\nimport StatusTag from './snippets/StatusTag';\nimport { RollbackOutlined } from '@ant-design/icons';\nimport { useAuthHeader } from 'react-auth-kit';\n\nconst getSymbolFromCurrency = require('currency-symbol-map')\nconst hdate = require(\"human-date\");\n\nfunction toTitleCase(str) {\n    return str.replace(\n      /\\w\\S*/g,\n      function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      }\n    );\n  }\n\nconst lightner = 3;\n\nfunction hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if(!result) return null;\n\n    let r = parseInt(result[1], 16), g = parseInt(result[2], 16), b = parseInt(result[3], 16);\n    \n    r = Math.round(r/15);\n    g = Math.round(g/15);\n    b = Math.round(b/15);\n\n    return {r, g, b};\n}\n\nvar stringToColour = function(str) {\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    var colour = '#';\n    for (var i = 0; i < 3; i++) {\n      var value = (hash >> (i * 8)) & 0xFF;\n      colour += ('00' + value.toString(16)).substr(-2)[0] + '0';\n    }\n\n    return hexToRgb(colour);\n    \n}\n\nconst cols = [\n    {\n        title : \"No.\",\n        dataIndex : \"dummy\",\n        key : \"dummy\",\n        render : (t, o, index) => {\n            return index + 1;\n        }\n    },\n    {\n        title : \"Description\",\n        dataIndex : \"description\",\n        key : \"description\"\n    },\n    {\n        title : \"Type\",\n        dataIndex : \"price\",\n        render : (price) => {\n            let s = toTitleCase(price.type);\n            s = s.replaceAll('_', ' ');\n            return s;\n        },\n        key : \"type\"\n    },\n    {\n        title : \"Quantity\",\n        dataIndex : \"quantity\",\n        key : \"quantity\"\n    },\n    {\n        title : \"Amount\",\n        dataIndex : \"amount\",\n        key : \"amount\",\n        render : (amount, invoice) => {\n            \n          return getSymbolFromCurrency(invoice.currency) + Math.round(amount/100);\n        }\n    }\n]\n\nconst ViewInvoiceSheet = () => {\n\n    const authHeader = useAuthHeader();\n\n    let { invoice_id } = useParams();\n    const [invoice, setInvoice] = useState({});\n    const [items, setItems] = useState([]);\n\n    let bg = stringToColour(\"invoickjasbdakjsbde_id\");\n\n    const light = `rgba(${bg.r*lightner}, ${bg.g*lightner}, ${bg.b*lightner})`;\n    const dark =  `rgba(${bg.r}, ${bg.g}, ${bg.b})`;\n\n    const bgGradient = { background: `linear-gradient(to top, ${dark}, ${light})`, minHeight : '200px', borderRadius : '8px' }\n    \n    useEffect(() => {\n      \n        apiCall(\"/invoices/retrieve\", {invoice_id}, (response) => {\n            const invoice = response.data.data;\n            // console.log(invoice_id, bg)\n\n\n            setInvoice(invoice);\n            setItems(invoice.lines.data);\n        }, authHeader())\n    }, [])\n    \n\n    return (\n        <div className='sheet'>\n            <div className='sheet envelope no-margin' style={bgGradient}>\n                {invoice.id && \n                    <>\n                        <div>\n                            <h1>{(invoice.customer_name) ? `${invoice.customer_name.split(\" \")[0]}'s Invoice` : \"Invoice\"} </h1>\n                            <h3>{invoice.number} for {getSymbolFromCurrency(invoice.currency) + invoice.amount_due}  </h3>\n                            <h3>Due in {hdate.relativeTime(getDateObject(invoice.due_date))}.  </h3>\n                        </div>\n                        <div className=\"envelope\">\n                            <div className=\"row\">\n                                <div>Invoice ID :</div>\n                                <div><Tag color={light}>{invoice.id}</Tag></div>\n                            </div>\n                            <div className=\"row\">\n                                <div>Charge Date : </div>\n                                <div><Tag color={light}>{hdate.prettyPrint(getDateObject(invoice.created), { showTime : true })}</Tag></div>\n                            </div>\n                            <div className=\"row\" style={{marginTop : '1.2em', display : 'flex', justifyContent : 'flex-end', marginRight : '0.2em'}}>\n                                <Button size='huge' type='primary' danger icon={<RollbackOutlined/>} >Refund</Button>\n                            </div>\n                        </div>\n                    </>\n                }\n            </div>\n            {invoice.id && \n            \n            <div className=\"sheet no-margin invoice-container\">\n                <Row gutter={16}>\n                    <Col span={8}>\n                        <h2>From</h2>\n                        <div className=\"bulky-divider\" style={{backgroundColor : {dark}}}></div>\n                        <h3>{invoice.account_name}</h3>\n\n                    </Col>\n                    <Col span={8}>\n                        <h2>To</h2>\n                        <div className=\"bulky-divider\" style={{backgroundColor : {dark}}}></div>\n                        {invoice.customer_name && <h4>Name : {invoice.customer_name}</h4>}\n                        {invoice.customer_email && <h4>Email : {invoice.customer_email}</h4>}\n                        {invoice.customer_address && <h4>Address : {invoice.customer_address}</h4>}\n                        {invoice.customer_phone && <h4>Phone : {invoice.customer_phone}</h4>}\n                    </Col>\n                    <Col span={8}>\n                        <h2>Details</h2>\n                        <div className=\"bulky-divider\" style={{backgroundColor : {dark}}}></div>\n                        <h4>Invoice total : {getSymbolFromCurrency(invoice.currency)}{Math.round(invoice.amount_due/100)}</h4>\n                        <h4>Status : <StatusTag status={invoice.status}/></h4>\n\n                    </Col>\n                </Row>\n\n                <Divider/>\n                <Table columns={cols} dataSource={items} />\n            </div>\n\n            }\n            <Divider/>\n        </div>\n    )\n}\n\n\n\nexport default ViewInvoiceSheet;","import React from 'react'\nimport { Route, Routes } from \"react-router-dom\";\nimport { ListInvoicesSheet } from '.';\nimport Dashboard from './Dashboard';\nimport ViewInvoiceSheet from './ViewInvoiceSheet';\n\n\n// ReactDOM.render(<App />, document.getElementById('root'))\n\nexport default () => {\n    return (\n        <Routes>\n            <Route path=\"\" element={<Dashboard/>} />\n            <Route path=\"invoice/list\" element={<ListInvoicesSheet/>} />\n            <Route path=\"invoice/view/:invoice_id\" element={<ViewInvoiceSheet/>} />\n        </Routes>\n    )\n}\n","import React, { useState } from 'react'\nimport \"./Login.css\"\nimport { Alert, Button, Divider, Input, Space, Tabs } from 'antd'\nimport { ExclamationCircleOutlined, LockOutlined, LoginOutlined, UserAddOutlined, UserOutlined } from '@ant-design/icons';\nimport Wave from \"react-wavify\";\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { apiCall } from '../../helpers';\nimport { useSignIn,  } from 'react-auth-kit';\n\nconst Login = () => {\n\n    const [login_email, setLogin_email] = useState(\"hrushikeshchapke@gmail.com\");\n    const [login_password, setLogin_password] = useState(\"password\");\n    const [register_email, setRegister_email] = useState(\"\");\n    const [register_password, setRegister_password] = useState(\"\");\n    const [register_password_confirm, setRegister_password_confirm] = useState(\"\");\n\n    const [login_errors, setLogin_errors] = useState([]);\n    const [register_errors, setRegister_errors] = useState([]);\n\n    const signIn = useSignIn()\n    const navigate = useNavigate();\n\n\n    const tryLogin = () => {\n        let errors = [];\n\n        if(!login_email) errors.push(\"Please enter a valid e-mail.\");\n        if(!login_password) errors.push(\"Please enter your password.\");\n\n        if(errors.length > 0){\n            setLogin_errors(errors);\n            return;\n        }\n\n\n        apiCall(\"/auth/login\", {\n            email : \"hrushikeshchapke@gmail.com\",\n            password : \"password\"\n        }, (response, error) => {\n            console.log(\"LOGIN CALL RESPONSE\",response, error);\n            navigate('/sheet/invoice/list');\n            if(response.data.token){\n                if(signIn({\n                    token: response.data.token,\n                    expiresIn: 86400,\n                    tokenType: \"Bearer\",\n                    authState: response.data.user,\n                })){\n                    \n                }\n                \n            }\n        })\n    }\n\n    const tryRegister = () => {\n        let errors = [];\n\n        if(!register_email) errors.push(\"Please enter a valid e-mail.\");\n        if(!register_password) errors.push(\"Please enter your password.\");\n        if(!register_password_confirm) errors.push(\"Please confirm your password.\");\n        if(register_password !== register_password_confirm) errors.push(\"Your passwords don't match, please try again.\");\n\n        if(errors.length > 0){\n            setRegister_errors(errors);\n            return;\n        }\n\n\n    }\n\n    return (\n\n        <div className=\"login-container\">\n            <Wave fill='#7a7a7a2f'\n                paused={false}\n                options={{\n                height: 360,\n                amplitude: 40,\n                speed: 0.15,\n                points: 8\n                }}\n                style={{position : \"absolute\", bottom : '0px', top : '0px', zIndex : '2 !important'}}\n            />\n            <div className=\"sheet login\">\n                <Tabs tabPosition='bottom'>\n                    <Tabs.TabPane tab=\"Login\" key={1} >\n                        <Space direction='vertical' align='center' className='fields-container'>\n                        <h2 style={{textDecoration : \"underline\"}}>Login</h2>\n                        <Input onChange={(e) => setLogin_email(e.target.value)} type=\"email\" placeholder='Enter E-mail' prefix={<UserOutlined />} />\n                        <Input onChange={(e) => setLogin_password(e.target.value)} type=\"password\" placeholder='Enter password' prefix={<LockOutlined />} />\n                        <a className='forgot-btn' href=\"#\">Forgot Password?</a>\n                        {login_errors.map((error, index) => {\n                            return (\n                                <Alert icon={<ExclamationCircleOutlined />} showIcon style={{fontSize : \"0.8em\"}} message={error} key={index} type=\"error\" />\n                            )\n                        })}\n                        <br></br>\n                        <Button type='primary' onClick={() => tryLogin()} icon={<LoginOutlined/>}>Login</Button>\n                        <br></br>\n                        </Space>\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Register\" key={2} >\n                        <Space direction='vertical' align='center' className='fields-container'>\n                            <h2 style={{textDecoration : \"underline\"}}>Register</h2>\n                            <Input onChange={(e) => setRegister_email(e.target.value)} type=\"email\" placeholder='Enter E-mail' prefix={<UserOutlined />} />\n                            <Input onChange={(e) => setRegister_password(e.target.value)} type=\"password\" placeholder='Enter password' prefix={<LockOutlined />} />\n                            <Input onChange={(e) => setRegister_password_confirm(e.target.value)} type=\"password\" placeholder='Confirm password' prefix={<LockOutlined />} />\n                            {register_errors.map((error, index) => {\n                                return (\n                                    <Alert icon={<ExclamationCircleOutlined />} showIcon style={{fontSize : \"0.8em\"}} message={error} key={index} type=\"error\" />\n                                )\n                            })}\n                            <br></br>\n                            <Button onClick={() => tryRegister()} type='primary' icon={<UserAddOutlined/>}>Register</Button>\n                            <br></br>\n                        </Space>\n                    </Tabs.TabPane>\n                </Tabs>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react'\nimport { Route, Routes } from \"react-router-dom\";\nimport Login from \"./Login\";\n\n\n// ReactDOM.render(<App />, document.getElementById('root'))\n\nexport default () => {\n    return (\n        <Routes>\n            <Route path=\"\" element={<Login/>} />\n        </Routes>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport SheetRoutes from './pages/sheets/SheetRoutes'\nimport AuthRoutes from './pages/auth/AuthRoutes'\n// ReactDOM.render(<App />, document.getElementById('root'))\nimport { AuthProvider, RequireAuth } from 'react-auth-kit'\n\nReactDOM.render(\n    \n    <AuthProvider\n        authType='cookie'\n        authName='_auth'\n        expiresIn={86400}\n        cookieDomain={window.location.hostname}\n        cookieSecure={window.location.protocol === \"https:\"}\n    >\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={ <AuthRoutes/> } />\n\n                <Route path=\"sheet/*\" element={\n                    <RequireAuth loginPath={'/'}>\n                        <SheetRoutes/>\n                    </RequireAuth>\n                }></Route>\n            </Routes>\n        </Router>\n    </AuthProvider>\n    ,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}